<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.flowingcode.addons</groupId>
    <artifactId>font-awesome-iron-iconset</artifactId>
    <version>2.2.1-SNAPSHOT</version>
    <name>FontAwesome Iron Iconset</name>
    <description>Iron iconset based on FontAwesome</description>
    
    <properties>
        <vaadin.version>14.4.0</vaadin.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <jetty.version>9.4.15.v20190215</jetty.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <project.build.generatedSources>${project.basedir}/src/main/generated</project.build.generatedSources>
        <!-- 
        <fontawesome.version>Pro 5.15.1</fontawesome.version>
        <project.build.generatedResources>${project.basedir}/src/main/resources/META-INF/resources/frontend</project.build.generatedResources>
        <codegen.sprites>${project.basedir}/src/main/sprites</codegen.sprites>
        <codegen.skipDownload>true</codegen.skipDownload>
        <codegen.embedded>true</codegen.embedded>
         -->
        <fontawesome.version>5.15.1</fontawesome.version>
		<project.build.generatedResources>${project.basedir}/src/main/javascript</project.build.generatedResources>
        <codegen.sprites>${project.build.directory}/sprites</codegen.sprites>
        <codegen.skipDownload>false</codegen.skipDownload>
        <codegen.embedded>false</codegen.embedded>
        <npm.package>@flowingcode/font-awesome-iron-iconset</npm.package>
        <npm.version>2.2.0</npm.version>
    </properties>
    
	<scm>
        <url>https://github.com/FlowingCode/FontAwesomeIronIconset</url>
        <connection>scm:git:git://github.com/FlowingCode/FontAwesomeIronIconset.git</connection>
        <developerConnection>scm:git:ssh://git@github.com:/FlowingCode/FontAwesomeIronIconset.git</developerConnection>
        <tag>HEAD</tag>
    </scm>
	
    <organization>
       <name>Flowing Code</name>
       <url>https://www.flowingcode.com</url>
     </organization>
     <inceptionYear>2019</inceptionYear>
    <licenses>
        <license>
            <name>Apache 2</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-bom</artifactId>
                <type>pom</type>
                <scope>import</scope>
                <version>${vaadin.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <repositories>
        <repository>
            <id>Vaadin Directory</id>
            <url>https://maven.vaadin.com/vaadin-addons</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-core</artifactId>
            <exclusions>
                <!-- Webjars are only needed when running in Vaadin 13 compatibility mode in V14.
                     Your add-on can support npm in the same version mode and V13 compatiblity mode at the same time,
                     or with separate versions. Any V13 version should work with the compatibility mode in V14. -->
                <exclusion>
                    <groupId>com.vaadin.webjar</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.webjars.bowergithub.insites</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.webjars.bowergithub.polymer</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.webjars.bowergithub.polymerelements</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.webjars.bowergithub.vaadin</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.webjars.bowergithub.webcomponents</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>


    </dependencies>

    <build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5.3</version>
				</plugin>
				<plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
			</plugins>
		</pluginManagement>
		
        <plugins>
				
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>1.14</version>
				<configuration>
				  <licenseName>apache_v2</licenseName>
				  <addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
				  <excludes>
					<exclude>**/main/javascript/font-awesome-iron-iconset/*</exclude>
				  </excludes>
				  <extraExtensions>
					<xslt>xml</xslt>
				  </extraExtensions>
				</configuration>
			</plugin>
	
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
				  <execution>
					<id>add-source</id>
					<phase>generate-sources</phase>
					<goals>
					  <goal>add-source</goal>
					</goals>
					<configuration>
					  <sources>
						<source>${project.build.generatedSources}</source>
					  </sources>
					</configuration>
				  </execution>
				</executions>
            </plugin>
						
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.1.2</version>
                <configuration>
                    <archive>
                        <index>true</index>
                        <manifest>
                            <addClasspath>false</addClasspath>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                        <manifestEntries>
                            <Vaadin-Package-Version>1</Vaadin-Package-Version>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-maven-plugin</artifactId>
                <version>${vaadin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-frontend</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty.version}</version>
                <configuration>
                    <scanIntervalSeconds>3</scanIntervalSeconds>
                    <!-- Use test scope because the UI/demo classes are in
                            the test package. -->
                    <useTestScope>true</useTestScope>
                    <webAppConfig>
                        <resourceBases>
	                        <resourceBase>src/test/resources/META-INF/resources</resourceBase>
	                        <resourceBase>src/main/resources/META-INF/resources</resourceBase>
	                    </resourceBases>
                    </webAppConfig>
                    <supportedPackagings>
                        <supportedPackaging>jar</supportedPackaging>
                    </supportedPackagings>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>directory</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>3.1.0</version>
                        <configuration>
                            <appendAssemblyId>false</appendAssemblyId>
                            <descriptors>
                                <descriptor>assembly/assembly.xml</descriptor>
                            </descriptors>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <phase>install</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>3.0.1</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>3.0.1</version>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <quiet>true</quiet>
                            <additionalparam>-Xdoclint:none</additionalparam>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <version>3.1.2</version>
                        <configuration>
                            <!-- Generated file that shouldn't be included in add-ons -->
                            <excludes>
                                <exclude>META-INF/VAADIN/config/flow-build-info.json</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Run (demo) in production mode-->
        <profile>
            <id>production</id>
            <properties>
                <vaadin.productionMode>true</vaadin.productionMode>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>com.vaadin</groupId>
                    <artifactId>flow-server-production-mode</artifactId>
                </dependency>
            </dependencies>
            
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.vaadin</groupId>
                        <artifactId>vaadin-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>build-frontend</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

    	<profile>
    		<id>generate</id>
    		<build>
    			<defaultGoal>generate-sources</defaultGoal>
    			
    			<plugins>
					
    				<plugin>
				    	<artifactId>maven-clean-plugin</artifactId>
    					<executions>
    						<execution>
						    	<configuration>
							      <filesets>
									<!-- clean src/main/generated -->
							        <fileset>
							          <directory>${project.build.generatedSources}</directory>
							        </fileset>
									<!-- clean src/main/javascript -->
									<fileset>
										<directory>${project.build.generatedResources}</directory>
											<includes>
												<include>**/*.js</include>
											</includes>
											<excludes>
												<exclude>**/duotone.js</exclude>
											</excludes>
									</fileset>
						      	   </filesets>
						    	</configuration>
								<phase>clean</phase>
								<goals>
									<goal>clean</goal>
								</goals>
						    </execution>
						</executions>				    	
				  	</plugin>
			
					<plugin>
    					<groupId>org.codehaus.mojo</groupId>
    					<artifactId>exec-maven-plugin</artifactId>
    					<configuration>
    						<executable>mvn</executable>
    						<workingDirectory>${project.basedir}/src/codegen</workingDirectory>
    					</configuration>
    					<executions>
    						<execution>
								<id>iron-icons</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
								  <arguments>
									<argument>clean</argument>
									<argument>compile</argument>
									<argument>exec:java@download</argument>
									<argument>exec:java@generate</argument>
									
									<!-- The tag of FortAwesome/Font-Awesome that will be checked out -->
									<argument>-Dcodegen.tag=${fontawesome.version}</argument>
									
									<!-- Configure to true for skipping the download phase-->
									<argument>-Dcodegen.skipDownload=${codegen.skipDownload}</argument>
									
									<!-- Location of the SVG sprites -->
									<argument>-Dcodegen.sprites=${codegen.sprites}</argument>
									
									<!-- Location of the generated Java sources -->
									<argument>-Dcodegen.sources=${project.build.generatedSources}</argument>
									
									<!-- Location of the generated JS modules -->
									<argument>-Dcodegen.resources=${project.build.generatedResources}</argument>
									
									<!-- if embedded=false value and version are used for the @NpmPackage annotation  
									     if embedded=true no @NpmPackage annotation will be added -->
									<argument>-Dcodegen.embedded=${codegen.embedded}</argument>
									<argument>-Dcodegen.npmPackage=${npm.package}</argument>
									<argument>-Dcodegen.npmVersion=${npm.version}</argument>
								  </arguments>
								</configuration>
						    </execution>							
						</executions>		    					
    				</plugin>
    			
    			</plugins>    		
    		</build>
    	</profile>
    
    	<profile>
			<id>demo-jar</id>
            <build>		
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>test-jar</goal>
								</goals>
								<configuration>
									<classifier>demo</classifier>
									<excludes>
										<exclude>META-INF/resources/frontend/styles/shared-styles.css</exclude>
										<exclude>**/test/*</exclude>
										<exclude>**/integration/*</exclude>
										<exclude>**/DemoView.class</exclude>
										<exclude>**/DemoLayout.class</exclude>
									</excludes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
    </profiles>
</project>